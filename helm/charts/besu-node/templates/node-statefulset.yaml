---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "besu-node.fullname" . }}
  labels:
    app: {{ template "besu-node.fullname" . }}
    chart: {{ template "besu-node.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    namespace: {{ .Release.Namespace }}
    component: {{ .Release.Name }}
    app.kubernetes.io/name: {{ include "besu-node.fullname" . }}
    helm.sh/chart: {{ include "besu-node.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "besu-node.fullname" . }}
      release: {{ .Release.Name }}
      component: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "besu-node.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "besu-node.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "besu-node.fullname" . }}
        release: {{ .Release.Name }}
        component: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "besu-node.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: {{ .Release.Name }}
    spec:
      nodeName: {{ .Values.deploy.workerName }}
      {{- if ( eq .Values.cluster.type "aro" ) }} 
      serviceAccount: sa-lacchain
      {{- end }} 
      containers:
{{- if  eq .Values.deploy.typenode "tessera"}}
        - name:  {{ .Release.Name }}-tessera
          image: {{ .Values.image.tessera.repository }}:{{ .Values.image.tessera.tag }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
          env:
            - name: PUBLIC_IP
              value: "{{ .Values.deploy.publicIP }}"
            - name: DNS_NAME
              value:  {{ .Values.deploy.dnsName }}
            - name : HOST_TESSERA_PEER
              value: "{{ .Values.deploy.tessera.peer }}"
          volumeMounts:
            - name: data
              mountPath: data
          ports:
            - containerPort: 4040
              name: tessera
              protocol: TCP
            - containerPort: 4444
              name: tessera-besu
              protocol: TCP 
{{- end }} #end node tessera
{{- if or ( eq .Values.deploy.typenode "writer") ( eq .Values.deploy.typenode "tessera")}}
        - name: {{ .Release.Name }}-relay-signer
          image: {{ .Values.image.relay.repository }}:{{ .Values.image.relay.tag }}
          imagePullPolicy: {{ .Values.image.relay.pullPolicy }}
          resources:
            requests:
              cpu: 150m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1024Mi
          env:
          - name: HOST_BESU
            value: localhost
          - name: CONTRACT_ADDRESS
{{- if eq .Values.deploy.network "open-protest-net" }}
            value:  {{ .Values.image.relay.contract.openprotest }}
{{- else if eq .Values.deploy.network "protest-net" }}
            value:  {{ .Values.image.relay.contract.protest }}
{{- else if eq .Values.deploy.network "main-net" }}
            value:  {{ .Values.image.relay.contract.mainnet }}
{{- else }}
            value:  {{ .Values.image.relay.contract.openprotest }}
{{- end }}  
          volumeMounts:
            - name: data
              mountPath: /opt/secret
          ports:
            - containerPort: 9001
              name: relay-signer
              protocol: TCP
        - name: {{ .Release.Name }}-nginx
          image:  {{ .Values.image.nginx.repository }}:{{ .Values.image.nginx.tag }}
          imagePullPolicy: {{ .Values.image.nginx.pullPolicy }}
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1024Mi
          env:
          - name: HOST_RELAY_SIGNER
            value: localhost
          - name: HOST_BESU
            value: "127.0.0.1"
          ports:
            - containerPort: 80
              name: nginx
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
{{- end }} #end node writer
{{- if and (eq .Values.deploy.typenode "validator")}}
        - name: {{ .Release.Name }}-rotation
          image: {{ .Values.image.rotation.repository }}:{{ .Values.image.rotation.tag }}
          imagePullPolicy: {{ .Values.image.rotation.pullPolicy }}
          resources:
            requests:
              cpu: 150m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1024Mi
          env:
          - name: HOST_BESU
            value: localhost
          - name: CONTRACT_ADDRESS
{{- if eq .Values.deploy.network "open-protest-net" }}
            value:  {{ .Values.image.rotation.contract.openprotest }}
{{- else if eq .Values.deploy.network "protest-net" }}
            value:  {{ .Values.image.rotation.contract.protest }}
{{- else if eq .Values.deploy.network "main-net" }}
            value:  {{ .Values.image.rotation.contract.mainnet }}
{{- else }}
            value:  {{ .Values.image.rotation.contract.openprotest }}
{{- end }}  
          volumeMounts:
            - name: data
              mountPath: /opt/secret
{{- end }} #end  rotation       
        - name: {{ .Release.Name }}-besu
{{- if eq .Values.deploy.network "open-protest-net" }}
          image: {{ .Values.image.besu.repository }}:{{ .Values.image.besu.openprotest.tag }}
{{- else if eq .Values.deploy.network "protest-net" }}
          image: {{ .Values.image.besu.repository }}:{{ .Values.image.besu.protest.tag }}
{{- else if eq .Values.deploy.network "main-net" }}
          image: {{ .Values.image.besu.repository }}:{{ .Values.image.besu.mainnet.tag }}
{{- else }}
          image: {{ .Values.image.besu.repository }}:{{ .Values.image.besu.mainnet.tag }}
{{- end }}          
          
          imagePullPolicy: {{ .Values.image.besu.pullPolicy }}
          resources:
            requests:
              cpu: "{{ .Values.node.besu.resources.cpuRequest }}"
              memory: "{{ .Values.node.besu.resources.memRequest }}"
            limits:
              cpu: "{{ .Values.node.besu.resources.cpuLimit }}"
              memory: "{{ .Values.node.besu.resources.memLimit }}"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name  
          volumeMounts:
            - name: genesis
              mountPath: /etc/genesis
              readOnly: true
            - name: besu-config
              mountPath: /etc/besu
              readOnly: true
            - name: data
              mountPath: {{ .Values.node.besu.dataPath }}
          ports:
            - name: json-rpc
              containerPort: {{ .Values.node.besu.rpc.port }}
              protocol: TCP
            - name: ws
              containerPort: {{ .Values.node.besu.ws.port }}
              protocol: TCP
            - name: graphql
              containerPort: {{ .Values.node.besu.graphql.port }}
              protocol: TCP
            - name: rlpx
              containerPort: {{ .Values.node.besu.p2p.port }}
              protocol: TCP
            - name: discovery
              containerPort: {{ .Values.node.besu.p2p.port }}
              protocol: UDP
          command:
            - /bin/sh
            - -c
          args:
            - |
              exec
{{- if eq .Values.deploy.typenode "bootnode" }}
              /opt/besu/bin/besu --genesis-file={{ .Values.node.besu.genesisFilePath  }} --data-path={{ .Values.node.besu.dataPath }} public-key  export --to={{ .Values.node.besu.dataPath }}/bootnode ;
{{- else }}
              /opt/besu/bin/besu --genesis-file={{ .Values.node.besu.genesisFilePath  }} --data-path={{ .Values.node.besu.dataPath }} public-key  export-address --to={{ .Values.node.besu.dataPath }}/nodeAddress ;
{{- end }} 
              sleep 3;
{{- if eq .Values.deploy.typenode "tessera" }}
              /opt/besu/bin/besu  --config-file=/etc/besu/config.toml  --node-private-key-file={{ .Values.node.besu.dataPath }}/key  --privacy-marker-transaction-signing-key-file={{ .Values.node.besu.dataPath }}/key
{{- else }}
              /opt/besu/bin/besu  --config-file=/etc/besu/config.toml  --node-private-key-file={{ .Values.node.besu.dataPath }}/key  
{{- end }} 
      securityContext:
        fsGroup: 2000
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "besu-node.fullname" . }}-pvc
      - name: genesis
        configMap:
          name: {{ include "besu-node.fullname" . }}-besu-genesis
      - name: besu-config
        configMap:
          name: {{ include "besu-node.fullname" . }}-besu-config
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  {{ template "besu-node.fullname" . }}-ethstats
  labels:
    app:  {{ template "besu-node.fullname" . }}-ethstats
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "besu-node.fullname" . }}-ethstats
  serviceName: {{ include "besu-node.fullname" . }}-ethstats
  template:
    metadata:
      labels:
        app: {{ template "besu-node.fullname" . }}-ethstats
    spec:
      {{- if ( eq .Values.cluster.type "aro" ) }}
      serviceAccount: sa-lacchain
      {{- end }}
      containers:
        - name: {{ template "besu-node.fullname" . }}-ethstats
          image: alethio/ethstats-cli
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: ethstats-data
            {{- if ( eq .Values.cluster.type "aro" ) }}
              mountPath: /tmp/.config/configstore/
            {{- else }}
              mountPath: /root/.config/configstore/
            {{- end }}
              
          command:
            - /bin/sh
            - -c
          args:
            - |
             exec
              {{- if eq .Values.deploy.network "open-protest-net" }}
             ./bin/ethstats-cli.js -vd --register --account-email {{ .Values.deploy.nodeEmail }} --node-name "{{ .Values.deploy.nodeName }}" --server-url  {{ .Values.image.eth.server.openprotest }} --client-url ws://{{ template "besu-node.fullname" . }}:4546
             {{- else if eq .Values.deploy.network "protest-net" }}
             ./bin/ethstats-cli.js -vd --register --account-email {{ .Values.deploy.nodeEmail }} --node-name "{{ .Values.deploy.nodeName }}" --server-url  {{ .Values.image.eth.server.protest }} --client-url ws://{{ template "besu-node.fullname" . }}:4546
            {{- else if eq .Values.deploy.network "main-net" }}
             ./bin/ethstats-cli.js -vd --register --account-email {{ .Values.deploy.nodeEmail }} --node-name "{{ .Values.deploy.nodeName }}" --server-url  {{ .Values.image.eth.server.mainnet }} --client-url ws://{{ template "besu-node.fullname" . }}:4546
            {{- end }}   
          ports:
            - containerPort: 9001
              name: ethstats
              protocol: TCP

      securityContext:
        fsGroup: 2000
      volumes:
        - name: ethstats-data
          persistentVolumeClaim:
            claimName: {{ include "besu-node.fullname" . }}-ethstats-pvc 


